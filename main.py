import os
import random
import threading
from flask import Flask
import discord
from discord.ext import commands

BAD_WORDS = ["porn", "xxx", "sex"]

BLAGUES = [
    "Pourquoi les plongeurs plongent-ils toujours en arri√®re et jamais en avant ? Parce que sinon ils tombent encore dans le bateau !",
    "Quel est le comble pour un √©lectricien ? De ne pas √™tre au courant.",
    "Pourquoi les maths d√©priment-elles ? Parce qu'il y a trop de probl√®mes.",
    "Que dit une imprimante √† une autre imprimante ? T‚Äôas besoin de papier ou t‚Äôas juste une mauvaise impression ?",
    "Pourquoi les squelettes ne se battent jamais entre eux ? Parce qu‚Äôils n‚Äôont pas le c≈ìur √† √ßa.",
    "Pourquoi les maths aiment pas la for√™t ? Parce qu‚Äôil y a trop de racines.",
    "Pourquoi les poissons d√©testent l‚Äôordinateur ? Parce qu‚Äôils ont peur du net.",
    "Quel est l‚Äôanimal le plus connect√© ? Le pingouin, parce qu‚Äôil a un look wifi !",
    "Pourquoi les canards sont toujours √† l‚Äôheure ? Parce qu‚Äôils sont dans l‚Äô√©tang (le temps) !",
    "Docteur, j‚Äôai mal partout ! ... Comment √ßa ? ... Quand je touche ma t√™te, j‚Äôai mal‚Ä¶ quand je touche mon ventre, j‚Äôai mal‚Ä¶ quand je touche ma jambe, j‚Äôai mal‚Ä¶ ... Ah je vois : vous avez le doigt cass√© !",
    "Que fait une fraise sur un cheval ? Tagada tagada!",
]

# intents
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.presences = True

bot = commands.Bot(command_prefix='*', intents=intents)


#############
# Commandes #
#############
@bot.command()
async def bonjour(ctx):
    await ctx.send(f"Salut {ctx.author.name}, √ßa va ?")


@bot.command()
async def cv(ctx):
    await ctx.send(f"Oe cv & toi {ctx.author.name} ?")


@bot.command(name="quiestla",
             aliases=["qui_est_la", "who_is_online", "whoisonline"])
async def quiestla(ctx):
    if not ctx.guild:
        await ctx.send("Cette commande doit √™tre utilis√©e dans un serveur.")
        return

    # S'assurer que les membres sont bien charg√©s
    if not ctx.guild.chunked:
        try:
            await ctx.guild.chunk()
        except Exception:
            pass

    # Filtrer les membres non-bot qui ne sont pas offline
    online_members = [
        m for m in ctx.guild.members
        if not m.bot and m.status != discord.Status.offline
    ]

    if not online_members:
        await ctx.send("Personne de connect√© (hors bots).")
        return

    # Limiter l'affichage √† 25 pour √©viter trop long
    display_list = ", ".join(m.display_name for m in online_members[:25])
    more = f" et {len(online_members)-25} de plus..." if len(
        online_members) > 25 else ""
    await ctx.send(f"En ligne : {display_list}{more}")


@bot.command()
async def blague(ctx):
    blague_choisie = random.choice(BLAGUES)
    await ctx.send(f"üòÇ {blague_choisie}")


@bot.command()
async def pileouface(ctx, *, choix: str):
    choix = choix.lower()
    if choix not in ["pile", "face"]:
        await ctx.send("Veuillez choisir entre 'pile' ou 'face'.")
        return
    resultat = random.choice(["pile", "face"])
    if choix == resultat:
        await ctx.send(
            f"Bravo {ctx.author.name}, tu as gagn√© ! Le r√©sultat √©tait bien {resultat}."
        )
        return
    await ctx.send(
        f"Dommage {ctx.author.name}, tu as perdu ! Le r√©sultat √©tait {resultat}."
    )


##############
# Evenements #
##############


@bot.event
async def on_message(message: discord.Message):
    # On ignore les messages envoy√©s par le bot lui-m√™me => tr√®s important sinon on va cr√©er une boucle infinie
    if message.author.bot:
        return
    # await message.channel.send(f"{message.author.name} vient d'√©crire {message.content}")

    # antispam
    content_lower = message.content.lower()
    if "https://" in content_lower and any(bad in content_lower
                                           for bad in BAD_WORDS):
        try:
            await message.delete()
            await message.channel.send(
                f"‚ö†Ô∏è {message.author.mention}, lien avec contenu interdit supprim√©."
            )
        except discord.Forbidden:
            # pas les droits
            pass
        except discord.HTTPException:
            # √©chec de suppression
            pass

    await bot.process_commands(message)


# --- Serveur Flask minimal pour le ping ---

app = Flask('')


@app.route('/ping')
def ping():
    return "pong"


def run_flask():
    # Flask √©coute sur 0.0.0.0 port 8080, obligatoire sur Replit
    app.run(host='0.0.0.0', port=8080)


# --- Lancement en parall√®le ---
if __name__ == '__main__':
    # Lance Flask dans un thread √† part
    threading.Thread(target=run_flask, daemon=True).start()

    # Lance le bot Discord (bloquant)
    token = os.environ['TOKEN_BOT_DISCORD']
    bot.run(token)
